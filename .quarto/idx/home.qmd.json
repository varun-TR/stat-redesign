{"title":"Graph redesigns","markdown":{"yaml":{"title":"Graph redesigns","format":"html","editor":"visual"},"headingText":"Bad graph 1","containsRefs":false,"markdown":"\n\n\n[![1024 Athlete Cardiac Arrests, Serious Issues, 666 Dead, After COVID Shot](images/athletics_dead.png)](https://globalcovidsummit.org/vaccine-injured/-1024-athlete-cardiac-arrests-serious-issues-666-dead-after-covid-shot)\n\nThe chart in an anti-vaccine article claims there's been a big rise in athletes collapsing and dying since COVID vaccines were introduced in 2021. But this isn't accurate because in 2021, sports events were much less common due to the pandemic.\n\nA better chart would compare the number of collapses and deaths in the first year before covid with the numbers from 2019, the year before the pandemic began. This would give a clearer picture of any real changes in the incidents of collapses and deaths among athletes.\n\nAs per graph,\n\n-   Starting the y-axis at a value greater than zero hides smaller variations at the lower end.\n\n-   The graph only covers a specific period, potentially omitting relevant seasonal trends or long-term patterns.\n\n-    While collapses are concerning, the graph emphasizes them heavily compared to deaths.\n\nWe can redesign the graph by:\n\n-   A line chart with a linear y-axis starting at zero to accurately represent the changes in collapses and deaths over time.\n\n-   A line chart with separate lines for collapses and deaths, using color to differentiate them as shown below\n\n```{r}\n\nlibrary(plotly)\nsuppressPackageStartupMessages(library(ggplot2))\n\n```\n\n```{r}\n\ndata <- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a plotly line plot\nplot_ly(data, x = ~month, y = ~collapses, type = 'scatter', mode = 'lines', name = 'Collapses') %>%\n  add_trace(y = ~deaths, name = 'Deaths') %>%\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Count\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)))\n```\n\n```{r}\n\n\ndata <- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \n                   \"Jan\", \"Feb\", \"Mar\", \"Apr\"), \n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a Plotly column bar chart\nplot_ly(data, x = ~month, y = ~collapses, type = 'bar', name = 'Collapses', marker = list(color = 'skyblue', line = list(color = 'darkblue', width = 1))) %>%\n  add_trace(x = ~month, y = ~deaths, name = 'Deaths', marker = list(color = 'coral', line = list(color = 'darkred', width = 1))) %>%\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Count\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)), barmode = 'group')\n```\n\nThis code creates a separate bar chart for collapses and deaths, positioned side-by-side. This allows for easier visual comparison between the two variables.\n\n## Bad graph 2\n\n![Source: News Article-https://medium.com/\\@actuarialtools/misleading-graphs-963efeda61c7](images/refill-varun.jpeg)\n\nThe above graph plots Refill per Customer by Group. Here we can notice that the Group B has more refills. For instance, Group B is 5 times in 2015 than Group A. However, the graph is not properly visualized.\n\nThe following points must be considered for good visualization.\n\n1.  The graph uses 3D chart which does not add any value.\n2.  The y-Axis does not start with 0. Due to this it is difficult to know the true values.\n3.  The orientation of graph makes it difficult to see exact values for y-axis.\n\nImprovements:\n\n1.  The graph can be enhanced by converting it to 2-dimensional.\n2.  By changing the y-axis from 0.\n3.  By changing the orientation of graph\n\nThe graph can be redesigned as shown below:\n\n```{r}\ndf <- data.frame(\n  Group = c(\"Group A\", \"Group A\", \"Group A\", \"Group A\", \"Group A\", \"Group B\", \"Group B\", \"Group B\", \"Group B\", \"Group B\"),\n  Year = c(\"CY 2010\", \"CY 2011\", \"CY 2012\", \"CY 2013\", \"CY 2014\", \"CY 2015\", \"CY 2016\", \"CY 2017\", \"CY 2018\", \"CY 2019\"),\n  Refills = c(14, 12, 10, 8, 6, 4, 12, 10, 8, 6)\n)\n\n\nlibrary(ggplot2)\n\nggplot(df, aes(x = Year, y = Refills, fill = Group)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Refills by Year and Group\",\n       x = \"Year\",\n       y = \"Refills\",\n       fill = \"Group\")\n\n```\n\n-   The graph uses a bar chart, which is an appropriate choice for comparing categories (years) and their corresponding values (refills).\n-   The data labels (refill counts) are present above each bar, making it easy to see the specific values for each year.\n-   The blue color used for the bars is visually appealing and generally easy to see against the white background.\n\nBut the spacing between the x-axis labels appears inconsistent, particularly between 2012 and 2013. This can make it visually misleading to compare\n\n```{r}\ncustom_palette <- c(\"#1f78b4\", \"#33a02c\")\n\n# Create bar graph\nggplot(df, aes(x = Year, y = Refills, fill = Group)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +\n  scale_fill_manual(values = custom_palette) +\n  labs(title = \"Refills by Year and Group\",\n       x = \"Year\",\n       y = \"Refills\",\n       fill = \"Group\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(hjust = 0.5))\n```\n\nBy incorporating the required changes, we can create a graph that is more informative and easier to interpret for your audience. But Line charts provide a smoother visual representation of the data compared to the discrete bars in a bar chart. This can be helpful when the data points are closely spaced or when focusing on changes over time.\n\n```{r}\n# Create line graph\nggplot(df, aes(x = Year, y = Refills, color = Group, group = Group)) +\n  geom_line() +\n  labs(title = \"Refills by Year and Group\",\n       x = \"Year\",\n       y = \"Refills\",\n       color = \"Group\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(hjust = 0.5))\n```\n\nLine charts effectively visualize trends over time or space due to the continuous line connecting data points. This makes it easier to identify patterns and changes in the data. The Line graph shows number of refills over year.\n\n-   It can be see that for Group A the line is red and for Group B it is blue.\n-   The Trend Line for group seems to be decreasing over increase in years and for Group B it initially increased from year 2015 to 2016 but thereon the refills by customers seems to be decreased.\n\nWe can conclude that, the refills per customer is decreasing from year to year but there is some event which caused it to spike from 2015 to 2016.\n\n## Bad graph 3\n\n![Argentinian TV channel C5N manipulating the y-axis to hide the terrible number of COVID-19 test. Source: Reddit. Original Source: C5N](images/country.webp)\n\nNow, look at those bars: Argentina tests almost as many people as the USA! At least that's what it seems like until you look at the numbers. Argentina tests 330 people per million, while the USA tests 7000. That is 20 times more, but the USA's bar is only 1.2 times higher.\n\nThe graph makes Argentina look decent at testing people, while it's clearly not the case. The TV channel arbitrarily manipulated the bars' sizes with no regard for logic or rules of scaling. This is how the graph would look without manipulations.\n\n```{r}\n\nlibrary(ggplot2)\n\nco2_data <- data.frame(\n  country = c(\"Brasil\", \"Argentina\", \"EEUU\", \"Italia\", \"Alemania\", \"Norurga\"),\n  emission = c(256, 330, 7000, 14100, 15700, 22300)\n)\n\nco2_data$country <- factor(co2_data$country, levels = co2_data$country)\n\ngg <- ggplot(co2_data, aes(x = country, y = emission)) +\n  geom_point(size = 3, color = \"skyblue\") +\n  geom_text(aes(label = emission), vjust = -0.3, hjust = -0.2, color = \"black\") +  # Add labels\n  labs(title = \"CO2 Emission by Country\",\n       x = \"Country\",\n       y = \"CO2 Emission\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngg\n\n```\n\n-   We can modify the graph into scatter plot for clear details. Now we can observe that Germany is not just 20 times more.\n\n-   Although, the graph indicates some variability in the relationship between the two variables. There is positive correlation between the data points.\n\n-   On the x-axis the words of countries are specific to italian language. Which is difficult to understand by non-native speakers. So it is better to convert into english.\n\nInstead of scatter plot, we can convert into map and represent the test numbers so by just looking we can able to interpret the results.\n\n```{r}\nlibrary(leaflet)\nlibrary(rnaturalearth)\n\n\ncovid_data <- data.frame(\n  country = c(\"Brazil\", \"Argentina\", \"United States of America\", \"Italy\",\"Germany\",\"Norway\"),\n  tests = c(258, 330, 7000, 14100,15700,22300)\n)\n\n\nworld <- ne_countries(returnclass = \"sf\")\n\n\nworld_with_co2 <- merge(world, covid_data, by.x = \"name\", by.y = \"country\", all.x = TRUE)\n\n\nleaflet_map <- leaflet(data = world_with_co2) %>%\n  addTiles() %>%\n  setView(lng = 0, lat = 0, zoom = 2) %>%  # Set initial view of the map\n  addPolygons(\n    fillColor = ~colorQuantile(\"Reds\", tests)(tests),\n    fillOpacity = 0.7,\n    weight = 1,\n    popup = ~paste(name, \": \", tests, \" tests\")\n  ) %>%\n  addLegend(\n    position = \"bottomright\",\n    pal = colorQuantile(\"Reds\", covid_data$tests),\n    values = covid_data$tests,\n    title = \"Covid test results\"\n  )\n\n\nleaflet_map\n```\n\nWith the map we can see the countries with less covid test are represented in light shade and countries with more covid tests are represented in dark shade.\n","srcMarkdownNoYaml":"\n\n## Bad graph 1\n\n[![1024 Athlete Cardiac Arrests, Serious Issues, 666 Dead, After COVID Shot](images/athletics_dead.png)](https://globalcovidsummit.org/vaccine-injured/-1024-athlete-cardiac-arrests-serious-issues-666-dead-after-covid-shot)\n\nThe chart in an anti-vaccine article claims there's been a big rise in athletes collapsing and dying since COVID vaccines were introduced in 2021. But this isn't accurate because in 2021, sports events were much less common due to the pandemic.\n\nA better chart would compare the number of collapses and deaths in the first year before covid with the numbers from 2019, the year before the pandemic began. This would give a clearer picture of any real changes in the incidents of collapses and deaths among athletes.\n\nAs per graph,\n\n-   Starting the y-axis at a value greater than zero hides smaller variations at the lower end.\n\n-   The graph only covers a specific period, potentially omitting relevant seasonal trends or long-term patterns.\n\n-    While collapses are concerning, the graph emphasizes them heavily compared to deaths.\n\nWe can redesign the graph by:\n\n-   A line chart with a linear y-axis starting at zero to accurately represent the changes in collapses and deaths over time.\n\n-   A line chart with separate lines for collapses and deaths, using color to differentiate them as shown below\n\n```{r}\n\nlibrary(plotly)\nsuppressPackageStartupMessages(library(ggplot2))\n\n```\n\n```{r}\n\ndata <- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a plotly line plot\nplot_ly(data, x = ~month, y = ~collapses, type = 'scatter', mode = 'lines', name = 'Collapses') %>%\n  add_trace(y = ~deaths, name = 'Deaths') %>%\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Count\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)))\n```\n\n```{r}\n\n\ndata <- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \n                   \"Jan\", \"Feb\", \"Mar\", \"Apr\"), \n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a Plotly column bar chart\nplot_ly(data, x = ~month, y = ~collapses, type = 'bar', name = 'Collapses', marker = list(color = 'skyblue', line = list(color = 'darkblue', width = 1))) %>%\n  add_trace(x = ~month, y = ~deaths, name = 'Deaths', marker = list(color = 'coral', line = list(color = 'darkred', width = 1))) %>%\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Count\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)), barmode = 'group')\n```\n\nThis code creates a separate bar chart for collapses and deaths, positioned side-by-side. This allows for easier visual comparison between the two variables.\n\n## Bad graph 2\n\n![Source: News Article-https://medium.com/\\@actuarialtools/misleading-graphs-963efeda61c7](images/refill-varun.jpeg)\n\nThe above graph plots Refill per Customer by Group. Here we can notice that the Group B has more refills. For instance, Group B is 5 times in 2015 than Group A. However, the graph is not properly visualized.\n\nThe following points must be considered for good visualization.\n\n1.  The graph uses 3D chart which does not add any value.\n2.  The y-Axis does not start with 0. Due to this it is difficult to know the true values.\n3.  The orientation of graph makes it difficult to see exact values for y-axis.\n\nImprovements:\n\n1.  The graph can be enhanced by converting it to 2-dimensional.\n2.  By changing the y-axis from 0.\n3.  By changing the orientation of graph\n\nThe graph can be redesigned as shown below:\n\n```{r}\ndf <- data.frame(\n  Group = c(\"Group A\", \"Group A\", \"Group A\", \"Group A\", \"Group A\", \"Group B\", \"Group B\", \"Group B\", \"Group B\", \"Group B\"),\n  Year = c(\"CY 2010\", \"CY 2011\", \"CY 2012\", \"CY 2013\", \"CY 2014\", \"CY 2015\", \"CY 2016\", \"CY 2017\", \"CY 2018\", \"CY 2019\"),\n  Refills = c(14, 12, 10, 8, 6, 4, 12, 10, 8, 6)\n)\n\n\nlibrary(ggplot2)\n\nggplot(df, aes(x = Year, y = Refills, fill = Group)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Refills by Year and Group\",\n       x = \"Year\",\n       y = \"Refills\",\n       fill = \"Group\")\n\n```\n\n-   The graph uses a bar chart, which is an appropriate choice for comparing categories (years) and their corresponding values (refills).\n-   The data labels (refill counts) are present above each bar, making it easy to see the specific values for each year.\n-   The blue color used for the bars is visually appealing and generally easy to see against the white background.\n\nBut the spacing between the x-axis labels appears inconsistent, particularly between 2012 and 2013. This can make it visually misleading to compare\n\n```{r}\ncustom_palette <- c(\"#1f78b4\", \"#33a02c\")\n\n# Create bar graph\nggplot(df, aes(x = Year, y = Refills, fill = Group)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +\n  scale_fill_manual(values = custom_palette) +\n  labs(title = \"Refills by Year and Group\",\n       x = \"Year\",\n       y = \"Refills\",\n       fill = \"Group\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(hjust = 0.5))\n```\n\nBy incorporating the required changes, we can create a graph that is more informative and easier to interpret for your audience. But Line charts provide a smoother visual representation of the data compared to the discrete bars in a bar chart. This can be helpful when the data points are closely spaced or when focusing on changes over time.\n\n```{r}\n# Create line graph\nggplot(df, aes(x = Year, y = Refills, color = Group, group = Group)) +\n  geom_line() +\n  labs(title = \"Refills by Year and Group\",\n       x = \"Year\",\n       y = \"Refills\",\n       color = \"Group\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(hjust = 0.5))\n```\n\nLine charts effectively visualize trends over time or space due to the continuous line connecting data points. This makes it easier to identify patterns and changes in the data. The Line graph shows number of refills over year.\n\n-   It can be see that for Group A the line is red and for Group B it is blue.\n-   The Trend Line for group seems to be decreasing over increase in years and for Group B it initially increased from year 2015 to 2016 but thereon the refills by customers seems to be decreased.\n\nWe can conclude that, the refills per customer is decreasing from year to year but there is some event which caused it to spike from 2015 to 2016.\n\n## Bad graph 3\n\n![Argentinian TV channel C5N manipulating the y-axis to hide the terrible number of COVID-19 test. Source: Reddit. Original Source: C5N](images/country.webp)\n\nNow, look at those bars: Argentina tests almost as many people as the USA! At least that's what it seems like until you look at the numbers. Argentina tests 330 people per million, while the USA tests 7000. That is 20 times more, but the USA's bar is only 1.2 times higher.\n\nThe graph makes Argentina look decent at testing people, while it's clearly not the case. The TV channel arbitrarily manipulated the bars' sizes with no regard for logic or rules of scaling. This is how the graph would look without manipulations.\n\n```{r}\n\nlibrary(ggplot2)\n\nco2_data <- data.frame(\n  country = c(\"Brasil\", \"Argentina\", \"EEUU\", \"Italia\", \"Alemania\", \"Norurga\"),\n  emission = c(256, 330, 7000, 14100, 15700, 22300)\n)\n\nco2_data$country <- factor(co2_data$country, levels = co2_data$country)\n\ngg <- ggplot(co2_data, aes(x = country, y = emission)) +\n  geom_point(size = 3, color = \"skyblue\") +\n  geom_text(aes(label = emission), vjust = -0.3, hjust = -0.2, color = \"black\") +  # Add labels\n  labs(title = \"CO2 Emission by Country\",\n       x = \"Country\",\n       y = \"CO2 Emission\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngg\n\n```\n\n-   We can modify the graph into scatter plot for clear details. Now we can observe that Germany is not just 20 times more.\n\n-   Although, the graph indicates some variability in the relationship between the two variables. There is positive correlation between the data points.\n\n-   On the x-axis the words of countries are specific to italian language. Which is difficult to understand by non-native speakers. So it is better to convert into english.\n\nInstead of scatter plot, we can convert into map and represent the test numbers so by just looking we can able to interpret the results.\n\n```{r}\nlibrary(leaflet)\nlibrary(rnaturalearth)\n\n\ncovid_data <- data.frame(\n  country = c(\"Brazil\", \"Argentina\", \"United States of America\", \"Italy\",\"Germany\",\"Norway\"),\n  tests = c(258, 330, 7000, 14100,15700,22300)\n)\n\n\nworld <- ne_countries(returnclass = \"sf\")\n\n\nworld_with_co2 <- merge(world, covid_data, by.x = \"name\", by.y = \"country\", all.x = TRUE)\n\n\nleaflet_map <- leaflet(data = world_with_co2) %>%\n  addTiles() %>%\n  setView(lng = 0, lat = 0, zoom = 2) %>%  # Set initial view of the map\n  addPolygons(\n    fillColor = ~colorQuantile(\"Reds\", tests)(tests),\n    fillOpacity = 0.7,\n    weight = 1,\n    popup = ~paste(name, \": \", tests, \" tests\")\n  ) %>%\n  addLegend(\n    position = \"bottomright\",\n    pal = colorQuantile(\"Reds\", covid_data$tests),\n    values = covid_data$tests,\n    title = \"Covid test results\"\n  )\n\n\nleaflet_map\n```\n\nWith the map we can see the countries with less covid test are represented in light shade and countries with more covid tests are represented in dark shade.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"home.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","theme":"cosomo","title":"Graph redesigns","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}