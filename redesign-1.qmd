---
title: "Redesigns (2/2)"
editor: visual
---

##  Improvements from dual axis line chart

```{r}
library(plotly)
data <- data.frame(
  month = factor(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr"),
                 levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")),
  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),
  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)
)

# Create a plotly line plot
plot_ly(data, x = ~month, y = ~collapses, type = 'scatter', mode = 'lines', name = 'Collapses') %>%
  add_trace(y = ~deaths, name = 'Deaths') %>%
  layout(title = "Athlete Collapses and Deaths",
         xaxis = list(title = "Month"),
         yaxis = list(title = "Frequencies", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)))
```

The line chart effectively displays the trend over time, showcasing that collapses significantly outnumber deaths. The y-axis values are reasonable, aiding in understanding the scale of occurrences.

To enhance clarity in distinguishing collapses from deaths per month, we can consider redesigning the graph as a dual-axis line chart. This modification would enable viewers to clearly visualize and compare the trends of collapses and deaths simultaneously, providing a clearer understanding of the relationship between the two variables.

##  Improvements from bar chart

```{r}

library(plotly)

data <- data.frame(
  month = factor(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", 
                   "Jan", "Feb", "Mar", "Apr"), 
                 levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")),
  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),
  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)
)

# Create a Plotly column bar chart
plot_ly(data, x = ~month, y = ~collapses, type = 'bar', name = 'Collapses', marker = list(color = 'skyblue', line = list(color = 'darkblue', width = 1))) %>%
  add_trace(x = ~month, y = ~deaths, name = 'Deaths', marker = list(color = 'coral', line = list(color = 'darkred', width = 1))) %>%
  layout(title = "Athlete Collapses and Deaths",
         xaxis = list(title = "Month"),
         yaxis = list(title = "Frequencies", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)), barmode = 'group')
```

This code creates a separate bar chart for collapses and deaths, positioned side-by-side. This allows for easier visual comparison between the two variables.

By converting into bar graph, we can achieve the following :

-   This Bar graphs enable a clear and instant comparison between different variables.

-    This Bar graph provide a two-dimensional portrayal of data, which is often simpler for humans to comprehend compared to raw numerical data. By presenting collapses and deaths on a shared scale, viewers can swiftly grasp the relative variances and trends between the two variables.

-    Bar graphs make it easy to spot the highest and lowest values for each variable in each month. This can be achieved by observing the tallest and shortest bars. This insight is crucial for understanding the severity of collapses and deaths over time and identifying any exceptional occurrences.

-    By visually representing collapses and deaths side by side, viewers can readily discern patterns and trends. Noting that there are more collapses than deaths in each month, in this case, highlights a potentially significant issue that may warrant further investigation or intervention.

-    Graphical representations streamline the communication of insights derived from the data. Instead of presenting viewers with raw figures or extensive tables, a bar graph condenses the information into a visually understandable format, making it easier for stakeholders to comprehend and act upon.
