[
  {
    "objectID": "home.html",
    "href": "home.html",
    "title": "Graph redesigns",
    "section": "",
    "text": "1024 Athlete Cardiac Arrests, Serious Issues, 666 Dead, After COVID Shot\n\n\nThe chart in an anti-vaccine article claims there’s been a big rise in athletes collapsing and dying since COVID vaccines were introduced in 2021. But this isn’t accurate because in 2021, sports events were much less common due to the pandemic.\nA better chart would compare the number of collapses and deaths in the first year before covid with the numbers from 2019, the year before the pandemic began. This would give a clearer picture of any real changes in the incidents of collapses and deaths among athletes.\nAs per graph,\n\nStarting the y-axis at a value greater than zero hides smaller variations at the lower end.\nThe graph only covers a specific period, potentially omitting relevant seasonal trends or long-term patterns.\nWhile collapses are concerning, the graph emphasizes them heavily compared to deaths.\n\nWe can redesign the graph by:\n\nA line chart with a linear y-axis starting at zero to accurately represent the changes in collapses and deaths over time.\nA line chart with separate lines for collapses and deaths, using color to differentiate them as shown below\n\n\n\n\n\n\nWe can clearly see the trend over time in this line chart. We can see that collapses are much more than deaths. The graph also shows reasonable values on y-axis. However, inorder to clearly distinguish the collapses and deaths per month, we can redesign into below graph for clear visuals.\n\nlibrary(plotly)\n\nLoading required package: ggplot2\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\ndata &lt;- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \n                   \"Jan\", \"Feb\", \"Mar\", \"Apr\"), \n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a Plotly column bar chart\nplot_ly(data, x = ~month, y = ~collapses, type = 'bar', name = 'Collapses', marker = list(color = 'skyblue', line = list(color = 'darkblue', width = 1))) %&gt;%\n  add_trace(x = ~month, y = ~deaths, name = 'Deaths', marker = list(color = 'coral', line = list(color = 'darkred', width = 1))) %&gt;%\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Count\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)), barmode = 'group')\n\n\n\n\n\nThis code creates a separate bar chart for collapses and deaths, positioned side-by-side. This allows for easier visual comparison between the two variables."
  },
  {
    "objectID": "home.html#bad-graph-1",
    "href": "home.html#bad-graph-1",
    "title": "Graph redesigns",
    "section": "",
    "text": "1024 Athlete Cardiac Arrests, Serious Issues, 666 Dead, After COVID Shot\n\n\nThe chart in an anti-vaccine article claims there’s been a big rise in athletes collapsing and dying since COVID vaccines were introduced in 2021. But this isn’t accurate because in 2021, sports events were much less common due to the pandemic.\nA better chart would compare the number of collapses and deaths in the first year before covid with the numbers from 2019, the year before the pandemic began. This would give a clearer picture of any real changes in the incidents of collapses and deaths among athletes.\nAs per graph,\n\nStarting the y-axis at a value greater than zero hides smaller variations at the lower end.\nThe graph only covers a specific period, potentially omitting relevant seasonal trends or long-term patterns.\nWhile collapses are concerning, the graph emphasizes them heavily compared to deaths.\n\nWe can redesign the graph by:\n\nA line chart with a linear y-axis starting at zero to accurately represent the changes in collapses and deaths over time.\nA line chart with separate lines for collapses and deaths, using color to differentiate them as shown below\n\n\n\n\n\n\nWe can clearly see the trend over time in this line chart. We can see that collapses are much more than deaths. The graph also shows reasonable values on y-axis. However, inorder to clearly distinguish the collapses and deaths per month, we can redesign into below graph for clear visuals.\n\nlibrary(plotly)\n\nLoading required package: ggplot2\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\ndata &lt;- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \n                   \"Jan\", \"Feb\", \"Mar\", \"Apr\"), \n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a Plotly column bar chart\nplot_ly(data, x = ~month, y = ~collapses, type = 'bar', name = 'Collapses', marker = list(color = 'skyblue', line = list(color = 'darkblue', width = 1))) %&gt;%\n  add_trace(x = ~month, y = ~deaths, name = 'Deaths', marker = list(color = 'coral', line = list(color = 'darkred', width = 1))) %&gt;%\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Count\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)), barmode = 'group')\n\n\n\n\n\nThis code creates a separate bar chart for collapses and deaths, positioned side-by-side. This allows for easier visual comparison between the two variables."
  },
  {
    "objectID": "home.html#bad-graph-2",
    "href": "home.html#bad-graph-2",
    "title": "Graph redesigns",
    "section": "Bad graph 2",
    "text": "Bad graph 2\n\n\n\nSource: News Article-https://medium.com/@actuarialtools/misleading-graphs-963efeda61c7\n\n\nThe above graph plots Refill per Customer by Group. Here we can notice that the Group B has more refills. For instance, Group B is 5 times in 2015 than Group A. However, the graph is not properly visualized.\nThe following points must be considered for good visualization.\n\nThe graph uses 3D chart which does not add any value.\nThe y-Axis does not start with 0. Due to this it is difficult to know the true values.\nThe orientation of graph makes it difficult to see exact values for y-axis.\n\nImprovements:\n\nThe graph can be enhanced by converting it to 2-dimensional.\nBy changing the y-axis from 0.\nBy changing the orientation of graph\n\nThe graph can be redesigned as shown below:\n\ndf &lt;- data.frame(\n  Group = c(\"Group A\", \"Group A\", \"Group A\", \"Group A\", \"Group A\", \"Group B\", \"Group B\", \"Group B\", \"Group B\", \"Group B\"),\n  Year = c(\"CY 2010\", \"CY 2011\", \"CY 2012\", \"CY 2013\", \"CY 2014\", \"CY 2015\", \"CY 2016\", \"CY 2017\", \"CY 2018\", \"CY 2019\"),\n  Refills = c(14, 12, 10, 8, 6, 4, 12, 10, 8, 6)\n)\n\n\nlibrary(ggplot2)\n\nggplot(df, aes(x = Year, y = Refills, fill = Group)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Refills by Year and Group\",\n       x = \"Year\",\n       y = \"Refills\",\n       fill = \"Group\")\n\n\n\n\n\nThe graph uses a bar chart, which is an appropriate choice for comparing categories (years) and their corresponding values (refills).\nThe data labels (refill counts) are present above each bar, making it easy to see the specific values for each year.\nThe blue color used for the bars is visually appealing and generally easy to see against the white background.\n\nBut the spacing between the x-axis labels appears inconsistent, particularly between 2012 and 2013. This can make it visually misleading to compare\n\ncustom_palette &lt;- c(\"#1f78b4\", \"#33a02c\")\n\n# Create bar graph\nggplot(df, aes(x = Year, y = Refills, fill = Group)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\") +\n  scale_fill_manual(values = custom_palette) +\n  labs(title = \"Refills by Year and Group\",\n       x = \"Year\",\n       y = \"Refills\",\n       fill = \"Group\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(hjust = 0.5))\n\n\n\n\nBy incorporating the required changes, we can create a graph that is more informative and easier to interpret for your audience. But Line charts provide a smoother visual representation of the data compared to the discrete bars in a bar chart. This can be helpful when the data points are closely spaced or when focusing on changes over time.\n\n# Create line graph\nggplot(df, aes(x = Year, y = Refills, color = Group, group = Group)) +\n  geom_line() +\n  labs(title = \"Refills by Year and Group\",\n       x = \"Year\",\n       y = \"Refills\",\n       color = \"Group\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(hjust = 0.5))\n\n\n\n\nLine charts effectively visualize trends over time or space due to the continuous line connecting data points. This makes it easier to identify patterns and changes in the data. The Line graph shows number of refills over year.\n\nIt can be see that for Group A the line is red and for Group B it is blue.\nThe Trend Line for group seems to be decreasing over increase in years and for Group B it initially increased from year 2015 to 2016 but thereon the refills by customers seems to be decreased.\n\nWe can conclude that, the refills per customer is decreasing from year to year but there is some event which caused it to spike from 2015 to 2016."
  },
  {
    "objectID": "home.html#bad-graph-3",
    "href": "home.html#bad-graph-3",
    "title": "Graph redesigns",
    "section": "Bad graph 3",
    "text": "Bad graph 3\n\n\n\nArgentinian TV channel C5N manipulating the y-axis to hide the terrible number of COVID-19 test. Source: Reddit. Original Source: C5N\n\n\nNow, look at those bars: Argentina tests almost as many people as the USA! At least that’s what it seems like until you look at the numbers. Argentina tests 330 people per million, while the USA tests 7000. That is 20 times more, but the USA’s bar is only 1.2 times higher.\nThe graph makes Argentina look decent at testing people, while it’s clearly not the case. The TV channel arbitrarily manipulated the bars’ sizes with no regard for logic or rules of scaling. This is how the graph would look without manipulations.\n\nlibrary(ggplot2)\n\nco2_data &lt;- data.frame(\n  country = c(\"Brasil\", \"Argentina\", \"EEUU\", \"Italia\", \"Alemania\", \"Norurga\"),\n  emission = c(256, 330, 7000, 14100, 15700, 22300)\n)\n\nco2_data$country &lt;- factor(co2_data$country, levels = co2_data$country)\n\ngg &lt;- ggplot(co2_data, aes(x = country, y = emission)) +\n  geom_point(size = 3, color = \"skyblue\") +\n  geom_text(aes(label = emission), vjust = -0.3, hjust = -0.2, color = \"black\") +  # Add labels\n  labs(title = \"Covid tests by Country\",\n       x = \"Country\",\n       y = \"CO2 Emission\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngg\n\n\n\n\n\nWe can modify the graph into scatter plot for clear details. Now we can observe that Germany is not just 20 times more.\nAlthough, the graph indicates some variability in the relationship between the two variables. There is positive correlation between the data points.\nOn the x-axis the words of countries are specific to italian language. Which is difficult to understand by non-native speakers. So it is better to convert into english.\n\nInstead of scatter plot, we can convert into map and represent the test numbers so by just looking we can able to interpret the results.\n\nlibrary(leaflet)\nlibrary(rnaturalearth)\n\n\ncovid_data &lt;- data.frame(\n  country = c(\"Brazil\", \"Argentina\", \"United States of America\", \"Italy\",\"Germany\",\"Norway\"),\n  tests = c(258, 330, 7000, 14100,15700,22300)\n)\n\n\nworld &lt;- ne_countries(returnclass = \"sf\")\n\n\nworld_with_co2 &lt;- merge(world, covid_data, by.x = \"name\", by.y = \"country\", all.x = TRUE)\n\n\nleaflet_map &lt;- leaflet(data = world_with_co2) %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 0, lat = 0, zoom = 2) %&gt;%  # Set initial view of the map\n  addPolygons(\n    fillColor = ~colorQuantile(\"Reds\", tests)(tests),\n    fillOpacity = 0.7,\n    weight = 1,\n    popup = ~paste(name, \": \", tests, \" tests\")\n  ) %&gt;%\n  addLegend(\n    position = \"bottomright\",\n    pal = colorQuantile(\"Reds\", covid_data$tests),\n    values = covid_data$tests,\n    title = \"Covid test results\"\n  )\n\n\nleaflet_map\n\n\n\n\n\nWith the map we can see the countries with less covid test are represented in light shade and countries with more covid tests are represented in dark shade."
  },
  {
    "objectID": "redesign(2)-1.html",
    "href": "redesign(2)-1.html",
    "title": "Redesigns (2/2)",
    "section": "",
    "text": "library(ggplot2)\n\nco2_data &lt;- data.frame(\n  country = c(\"Brasil\", \"Argentina\", \"EEUU\", \"Italia\", \"Alemania\", \"Norurga\"),\n  emission = c(256, 330, 7000, 14100, 15700, 22300)\n)\n\nco2_data$country &lt;- factor(co2_data$country, levels = co2_data$country)\n\ngg &lt;- ggplot(co2_data, aes(x = country, y = emission)) +\n  geom_point(size = 3, color = \"skyblue\") +\n  geom_text(aes(label = emission), vjust = -0.3, hjust = -0.2, color = \"black\") +  # Add labels\n  labs(title = \"Covid tests by Country\",\n       x = \"Country\",\n       y = \"covid tests in millions(m)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngg\n\n\n\n\n\nWe can enhance clarity by converting the graph into a scatter plot, allowing for detailed observation. Notably, Germany stands out as approximately 20 times more significant.\nMoreover, the graph suggests some variability in the relationship between the variables, indicating a positive correlation among the data points.\nBy creating clear x and y axes. This addition will provide better context for interpreting the data and facilitate easier comparison between countries.\n\nInstead of scatter plot, we can convert into map and represent the test numbers so by just looking we can able to interpret the results."
  },
  {
    "objectID": "redesign(2)-1.html#improvements-from-scatterplot-chart",
    "href": "redesign(2)-1.html#improvements-from-scatterplot-chart",
    "title": "Redesigns (2/2)",
    "section": "",
    "text": "library(ggplot2)\n\nco2_data &lt;- data.frame(\n  country = c(\"Brasil\", \"Argentina\", \"EEUU\", \"Italia\", \"Alemania\", \"Norurga\"),\n  emission = c(256, 330, 7000, 14100, 15700, 22300)\n)\n\nco2_data$country &lt;- factor(co2_data$country, levels = co2_data$country)\n\ngg &lt;- ggplot(co2_data, aes(x = country, y = emission)) +\n  geom_point(size = 3, color = \"skyblue\") +\n  geom_text(aes(label = emission), vjust = -0.3, hjust = -0.2, color = \"black\") +  # Add labels\n  labs(title = \"Covid tests by Country\",\n       x = \"Country\",\n       y = \"covid tests in millions(m)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngg\n\n\n\n\n\nWe can enhance clarity by converting the graph into a scatter plot, allowing for detailed observation. Notably, Germany stands out as approximately 20 times more significant.\nMoreover, the graph suggests some variability in the relationship between the variables, indicating a positive correlation among the data points.\nBy creating clear x and y axes. This addition will provide better context for interpreting the data and facilitate easier comparison between countries.\n\nInstead of scatter plot, we can convert into map and represent the test numbers so by just looking we can able to interpret the results."
  },
  {
    "objectID": "redesign(2)-1.html#improvements-from-map-chart",
    "href": "redesign(2)-1.html#improvements-from-map-chart",
    "title": "Redesigns (2/2)",
    "section": "Improvements from map chart",
    "text": "Improvements from map chart\n\nlibrary(leaflet)\nlibrary(rnaturalearth)\n\n\ncovid_data &lt;- data.frame(\n  country = c(\"Brazil\", \"Argentina\", \"United States of America\", \"Italy\",\"Germany\",\"Norway\"),\n  tests = c(258, 330, 7000, 14100,15700,22300)\n)\n\n\nworld &lt;- ne_countries(returnclass = \"sf\")\n\n\nworld_with_co2 &lt;- merge(world, covid_data, by.x = \"name\", by.y = \"country\", all.x = TRUE)\n\n\nleaflet_map &lt;- leaflet(data = world_with_co2) %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 0, lat = 0, zoom = 2) %&gt;%  # Set initial view of the map\n  addPolygons(\n    fillColor = ~colorQuantile(\"Reds\", tests)(tests),\n    fillOpacity = 0.7,\n    weight = 1,\n    popup = ~paste(name, \": \", tests, \" tests\")\n  ) %&gt;%\n  addLegend(\n    position = \"bottomright\",\n    pal = colorQuantile(\"Reds\", covid_data$tests),\n    values = covid_data$tests,\n    title = \"Covid test results\"\n  )\n\n\nleaflet_map\n\n\n\n\n\nWith the map we can see the countries with less covid test are represented in light shade and countries with more covid tests are represented in dark shade. By visually examining the graph structure, users can identify patterns, clusters, and outliers within the data. Map graphs serve as effective communication tools for presenting and sharing findings with stakeholders, collaborators, and the general public.\nBy converting into map we can achieve:\n\nWe can achieve, a clear visual representation of the density of COVID testing across different countries. Lighter shades typically indicate lower testing rates, while darker shades signify higher testing rates. This allows viewers to quickly identify regions where testing is more or less prevalent.\nBy examining the map, users can identify patterns and clusters within the data. For example, they may observe clusters of darker shades in regions with more robust covid-19 tests or higher infection rates. Conversely, lighter shades may indicate areas with limited access to testing resources.\nWe can see patterns and outlines easily and map graphs serve as effective communication tools for presenting findings to stakeholders, collaborators, and the general public."
  },
  {
    "objectID": "badgraph-2.html",
    "href": "badgraph-2.html",
    "title": "Badgraph-2",
    "section": "",
    "text": "Argentinian TV channel C5N manipulating the y-axis to hide the terrible number of COVID-19 test. Source: Reddit. Original Source: C5N\nFig: Argentinian TV channel C5N manipulating the y-axis to hide the terrible number of COVID-19 test. Source: Reddit. Original Source: C5N [2]\nThe image showcases potential manipulation of the y-axis by the Argentinian TV channel C5N, aimed at obscuring the high number of COVID-19 tests. The source of this information is Reddit, with the original source being C5N itself.\nThis manipulation tactic involves adjusting the scale of the y-axis in a manner that downplays the magnitude of COVID-19 tests conducted. By compressing or altering the scale, the actual number of tests may appear significantly lower than they truly are, potentially misleading viewers about the extent of testing efforts and the prevalence of COVID-19 in the region.\nSuch practices undermine transparency and accurate reporting, hindering public awareness and understanding of the pandemic’s severity. It raises concerns about the integrity of information presented by media outlets and the need for responsible reporting to ensure public trust and safety.\nNow, look at those bars: Argentina tests almost as many people as the EEU! At least that’s what it seems like until you look at the numbers. Argentina tests 330 people per million, while the EUU tests 7000. That is 20 times more, but the EEU’s bar is only 1.2 times higher.\nThe graph makes Argentina look decent at testing people, while it’s clearly not the case. The TV channel arbitrarily manipulated the bars’ sizes with no regard for logic or rules of scaling. This is how the graph would look without manipulations."
  },
  {
    "objectID": "badgraph-2.html#suggestions-for-improvements",
    "href": "badgraph-2.html#suggestions-for-improvements",
    "title": "Badgraph-2",
    "section": "Suggestions for improvements:",
    "text": "Suggestions for improvements:\n\nBy modifying the lengths of bar plots, we can actually see the difference between argentina and EEU being 20 times greater .\nCreating y axis and x axis involves establishing the vertical (y-axis) and horizontal (x-axis) axes on a graph. These axes serve as reference points for interpreting data and provide context for the relationships between variables.\nGraphs typically operate in two dimensions, with data represented along both the x-axis and y-axis. Converting a graph into a 2D format involves simplifying the visualizations.\nOne optional modification would be changing the language of graph to english, as majority viewers can understand and interpret this language very well."
  },
  {
    "objectID": "redesign(2)-2.html",
    "href": "redesign(2)-2.html",
    "title": "redesign(2)-2",
    "section": "",
    "text": "Instead of scatter plot, we can convert into map and represent the test numbers so by just looking we can able to interpret the results.\n\nlibrary(leaflet)\nlibrary(rnaturalearth)\n\n\ncovid_data &lt;- data.frame(\n  country = c(\"Brazil\", \"Argentina\", \"United States of America\", \"Italy\",\"Germany\",\"Norway\"),\n  tests = c(258, 330, 7000, 14100,15700,22300)\n)\n\n\nworld &lt;- ne_countries(returnclass = \"sf\")\n\n\nworld_with_co2 &lt;- merge(world, covid_data, by.x = \"name\", by.y = \"country\", all.x = TRUE)\n\n\nleaflet_map &lt;- leaflet(data = world_with_co2) %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 0, lat = 0, zoom = 2) %&gt;%  # Set initial view of the map\n  addPolygons(\n    fillColor = ~colorQuantile(\"Reds\", tests)(tests),\n    fillOpacity = 0.7,\n    weight = 1,\n    popup = ~paste(name, \": \", tests, \" tests\")\n  ) %&gt;%\n  addLegend(\n    position = \"bottomright\",\n    pal = colorQuantile(\"Reds\", covid_data$tests),\n    values = covid_data$tests,\n    title = \"Covid test results\"\n  )\n\n\nleaflet_map\n\n\n\n\n\nWith the map we can see the countries with less covid test are represented in light shade and countries with more covid tests are represented in dark shade."
  },
  {
    "objectID": "badgraph-1.html",
    "href": "badgraph-1.html",
    "title": "Badgraph-1",
    "section": "",
    "text": "MIDPROJECT \n                           REDESIGNS OF GRAPHICAL REPRESENTATION\n                              By: Saivarun Tanjore Raghavendra"
  },
  {
    "objectID": "badgraph-1.html#visual-flaws-in-graph.",
    "href": "badgraph-1.html#visual-flaws-in-graph.",
    "title": "Badgraph-1",
    "section": "Visual flaws in graph.",
    "text": "Visual flaws in graph.\n\nAdjusting the y-axis to start at zero can reveal smaller variations at the lower end, offering a more accurate representation of the data.\nReducing the graph to a two-dimensional view could simplify analysis and interpretation of values.\nWhile collapses are indeed concerning, the current graph heavily emphasizes them over deaths, potentially skewing perceptions of the overall severity of both occurrences."
  },
  {
    "objectID": "badgraph-1.html#suggestions-for-improvements",
    "href": "badgraph-1.html#suggestions-for-improvements",
    "title": "Badgraph-1",
    "section": "Suggestions for improvements:",
    "text": "Suggestions for improvements:\n\nStarting the y-axis at a value greater than zero can obscure smaller changes at the lower end of the scale, potentially misleading viewers about the magnitude of variations.\n\n\n\nA three-dimensional graph can make it challenging to analyze and interpret data accurately, as it introduces unnecessary complexity and can distract from the main insights.\nAdditionally, the current graph places disproportionate emphasis on collapses compared to deaths, which may distort perceptions of the severity of each occurrence."
  },
  {
    "objectID": "redesign-2.html",
    "href": "redesign-2.html",
    "title": "redesigns-2",
    "section": "",
    "text": "library(plotly)\n\nLoading required package: ggplot2\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\ndata &lt;- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \n                   \"Jan\", \"Feb\", \"Mar\", \"Apr\"), \n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a Plotly column bar chart\nplot_ly(data, x = ~month, y = ~collapses, type = 'bar', name = 'Collapses', marker = list(color = 'skyblue', line = list(color = 'darkblue', width = 1))) %&gt;%\n  add_trace(x = ~month, y = ~deaths, name = 'Deaths', marker = list(color = 'coral', line = list(color = 'darkred', width = 1))) %&gt;%\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Count\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)), barmode = 'group')\n\n\n\n\n\nThis code creates a separate bar chart for collapses and deaths, positioned side-by-side. This allows for easier visual comparison between the two variables."
  },
  {
    "objectID": "codes.html",
    "href": "codes.html",
    "title": "Codes",
    "section": "",
    "text": "library(plotly)\n\nLoading required package: ggplot2\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\ndata &lt;- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a plotly line plot\nplot_ly(data, x = ~month, y = ~collapses, type = 'scatter', mode = 'lines', name = 'Collapses') %&gt;%\n  add_trace(y = ~deaths, name = 'Deaths') %&gt;% #here we add additional layer to dataset.\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Count\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)))\n\n\n\n\n\n\nlibrary(plotly)\n\ndata &lt;- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \n                   \"Jan\", \"Feb\", \"Mar\", \"Apr\"), \n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a Plotly column bar chart\nplot_ly(data, x = ~month, y = ~collapses, type = 'bar', name = 'Collapses', marker = list(color = 'skyblue', line = list(color = 'darkblue', width = 1))) %&gt;%\n  add_trace(x = ~month, y = ~deaths, name = 'Deaths', marker = list(color = 'coral', line = list(color = 'darkred', width = 1))) %&gt;%\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Frequencies\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)), barmode = 'group')\n\n\n\n\n\n\nlibrary(ggplot2)\n\nco2_data &lt;- data.frame(\n  country = c(\"Brasil\", \"Argentina\", \"EEUU\", \"Italia\", \"Alemania\", \"Norurga\"),\n  tests = c(256, 330, 7000, 14100, 15700, 22300)\n)\n\nco2_data$country &lt;- factor(co2_data$country, levels = co2_data$country)\n\ngg &lt;- ggplot(co2_data, aes(x = country, y = tests)) +\n  geom_point(size = 3, color = \"skyblue\") +\n  geom_text(aes(label = tests), vjust = -0.3, hjust = -0.2, color = \"black\") +  # Add labels\n  labs(title = \"Covid tests by Country\",\n       x = \"Country\",\n       y = \"covid tests in millions(m)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngg\n\n\n\n\n\nlibrary(leaflet)\nlibrary(rnaturalearth) #world map\n\n\ncovid_data &lt;- data.frame(\n  country = c(\"Brazil\", \"Argentina\", \"United States of America\", \"Italy\",\"Germany\",\"Norway\"),\n  tests = c(258, 330, 7000, 14100,15700,22300)\n)\n\n\nworld &lt;- ne_countries(returnclass = \"sf\") #worldmap dataset\n\n\nworld_with_co2 &lt;- merge(world, covid_data, by.x = \"name\", by.y = \"country\", all.x = TRUE)\n#here we merged both worldmap data to our data on countries\n\nleaflet_map &lt;- leaflet(data = world_with_co2) %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 0, lat = 0, zoom = 2) %&gt;%  # Set initial view of the map\n  addPolygons(\n    fillColor = ~colorQuantile(\"Reds\", tests)(tests),\n    fillOpacity = 0.7,\n    weight = 1,\n    popup = ~paste(name, \": \", tests, \" tests\")\n  ) %&gt;%\n  addLegend(\n    position = \"bottomright\",\n    pal = colorQuantile(\"Reds\", covid_data$tests),\n    values = covid_data$tests,\n    title = \"Covid test results\"\n  )\n\n\nleaflet_map"
  },
  {
    "objectID": "redesign-1.html",
    "href": "redesign-1.html",
    "title": "Redesigns (2/2)",
    "section": "",
    "text": "library(plotly)\n\nLoading required package: ggplot2\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\ndata &lt;- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a plotly line plot\nplot_ly(data, x = ~month, y = ~collapses, type = 'scatter', mode = 'lines', name = 'Collapses') %&gt;%\n  add_trace(y = ~deaths, name = 'Deaths') %&gt;%\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Frequencies\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)))\n\n\n\n\n\nThe line chart effectively displays the trend over time, showcasing that collapses significantly outnumber deaths. The y-axis values are reasonable, aiding in understanding the scale of occurrences.\nTo enhance clarity in distinguishing collapses from deaths per month, we can consider redesigning the graph as a dual-axis line chart. This modification would enable viewers to clearly visualize and compare the trends of collapses and deaths simultaneously, providing a clearer understanding of the relationship between the two variables."
  },
  {
    "objectID": "redesign-1.html#improvements-from-dual-axis-line-chart",
    "href": "redesign-1.html#improvements-from-dual-axis-line-chart",
    "title": "Redesigns (2/2)",
    "section": "",
    "text": "library(plotly)\n\nLoading required package: ggplot2\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\ndata &lt;- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a plotly line plot\nplot_ly(data, x = ~month, y = ~collapses, type = 'scatter', mode = 'lines', name = 'Collapses') %&gt;%\n  add_trace(y = ~deaths, name = 'Deaths') %&gt;%\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Frequencies\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)))\n\n\n\n\n\nThe line chart effectively displays the trend over time, showcasing that collapses significantly outnumber deaths. The y-axis values are reasonable, aiding in understanding the scale of occurrences.\nTo enhance clarity in distinguishing collapses from deaths per month, we can consider redesigning the graph as a dual-axis line chart. This modification would enable viewers to clearly visualize and compare the trends of collapses and deaths simultaneously, providing a clearer understanding of the relationship between the two variables."
  },
  {
    "objectID": "redesign-1.html#improvements-from-bar-chart",
    "href": "redesign-1.html#improvements-from-bar-chart",
    "title": "Redesigns (2/2)",
    "section": "Improvements from bar chart",
    "text": "Improvements from bar chart\n\nlibrary(plotly)\n\ndata &lt;- data.frame(\n  month = factor(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \n                   \"Jan\", \"Feb\", \"Mar\", \"Apr\"), \n                 levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")),\n  collapses = c(7, 6, 16, 17, 20, 28, 46, 57, 81, 109, 116, 124, 126, 73, 120, 55),\n  deaths = c(4, 4, 8, 10, 7, 19, 33, 34, 43, 64, 77, 90, 86, 51, 83, 36)\n)\n\n# Create a Plotly column bar chart\nplot_ly(data, x = ~month, y = ~collapses, type = 'bar', name = 'Collapses', marker = list(color = 'skyblue', line = list(color = 'darkblue', width = 1))) %&gt;%\n  add_trace(x = ~month, y = ~deaths, name = 'Deaths', marker = list(color = 'coral', line = list(color = 'darkred', width = 1))) %&gt;%\n  layout(title = \"Athlete Collapses and Deaths\",\n         xaxis = list(title = \"Month\"),\n         yaxis = list(title = \"Frequencies\", tickvals = c(0, 10, 20, 30,40,50,60,70,80,90,100,120)), barmode = 'group')\n\n\n\n\n\nThis code creates a separate bar chart for collapses and deaths, positioned side-by-side. This allows for easier visual comparison between the two variables.\nBy converting into bar graph, we can achieve the following :\n\nThis Bar graphs enable a clear and instant comparison between different variables.\nThis Bar graph provide a two-dimensional portrayal of data, which is often simpler for humans to comprehend compared to raw numerical data. By presenting collapses and deaths on a shared scale, viewers can swiftly grasp the relative variances and trends between the two variables.\nBar graphs make it easy to spot the highest and lowest values for each variable in each month. This can be achieved by observing the tallest and shortest bars. This insight is crucial for understanding the severity of collapses and deaths over time and identifying any exceptional occurrences.\nBy visually representing collapses and deaths side by side, viewers can readily discern patterns and trends. Noting that there are more collapses than deaths in each month, in this case, highlights a potentially significant issue that may warrant further investigation or intervention.\nGraphical representations streamline the communication of insights derived from the data. Instead of presenting viewers with raw figures or extensive tables, a bar graph condenses the information into a visually understandable format, making it easier for stakeholders to comprehend and act upon."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "[1] Global COVID Summit. “Vaccine Injured: 1024 Athlete Cardiac Arrests, Serious Issues — 666 Dead After COVID Shot,” Global COVID Summit. [Online]. Available: https://globalcovidsummit.org/vaccine-injured/-1024-athlete-cardiac-arrests-serious-issues-666-dead-after-covid-shot\n[2] CSN news channel. “Argentinian TV channel C5N manipulating the y-axis to hide the terrible number of COVID-19 tests,” [Online]. Available: https://www.c5n.com/"
  }
]